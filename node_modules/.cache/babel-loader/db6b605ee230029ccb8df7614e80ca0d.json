{"ast":null,"code":"var _jsxFileName = \"/Users/jeffereylam/repos/darwin-game/src/components/Game.js\";\nimport React from \"react\";\nimport traits from \"../data/traits.json\";\nimport survivalChance from \"../data/survivalChance.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLD = \"cold\";\nconst HOT = \"hot\";\nconst PREDATORS = \"predators\";\nconst TALL_PLANTS = \"tall plants\";\nconst VIRUS = \"virus\";\nconst VOLCANO = \"volcano\";\nconst CATASTROPHES = [COLD, HOT, PREDATORS, TALL_PLANTS, VIRUS, VOLCANO]; // function Game() {\n//     const [page, setPage] = useState(0);\n//     const [gameData, setGameData] = useState({\n//         yearsLeft: 1000000,\n//         populationCount: 6,\n//     });\n//     const Page = [\n//         Logo,\n//         InitialMutation,\n//         SurvivalSimulation,\n//     ][currentPosition];\n//     return <div><Page goToNext={() => setPage(page + 1)} /></div>;\n// }\n\nclass Traits {\n  constructor(legs, size, neck, hair, camo) {\n    this.legs = legs;\n    this.size = size;\n    this.neck = neck;\n    this.hair = hair;\n    this.camo = camo;\n  }\n\n}\n\n;\n\nfunction createRandomOffspring() {\n  return new Traits(randomElement(traits.LEGS), randomElement(traits.SIZE), randomElement(traits.NECK), randomElement(traits.HAIR), randomElement(traits.CAMO));\n}\n\n;\n\nfunction randomElement(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\n;\nlet population = [createRandomOffspring(), createRandomOffspring(), createRandomOffspring()];\n\nfunction firstRound() {\n  for (let i = 0; i < 5; i++) {\n    reproductionRound();\n  }\n\n  survivalRound();\n  console.log(population.length);\n  return population;\n}\n\nfunction reproductionRound() {\n  const reproductionRate = population.length / 2;\n\n  for (let i = 1; i <= reproductionRate; i++) {\n    population.push(singleOffspring(randomElement(population), randomElement(population)));\n  }\n\n  return population;\n} // defaults to lower index instead of 50/50\n\n\nfunction singleOffspring(animal_1, animal_2) {\n  return new Traits(traits.LEGS[Math.floor((traits.LEGS.indexOf(animal_1.legs) + traits.LEGS.indexOf(animal_2.legs)) / 2)], traits.SIZE[Math.floor((traits.SIZE.indexOf(animal_1.size) + traits.SIZE.indexOf(animal_2.size)) / 2)], traits.NECK[Math.floor((traits.NECK.indexOf(animal_1.neck) + traits.NECK.indexOf(animal_2.neck)) / 2)], traits.HAIR[Math.floor((traits.HAIR.indexOf(animal_1.hair) + traits.HAIR.indexOf(animal_2.hair)) / 2)], traits.CAMO[Math.floor((traits.CAMO.indexOf(animal_1.camo) + traits.CAMO.indexOf(animal_2.camo)) / 2)]);\n} // should return population with changes\n// references surivival test\n\n\nfunction survivalRound() {\n  const catastrophe = randomElement(CATASTROPHES);\n\n  for (let i = 0; i < population.length; i++) {\n    if (survivalTest(population[i], survivalChance[catastrophe]) === false) {\n      population.splice(i, 1);\n    }\n  }\n\n  return population;\n} // bool on whether or not animal lives\n// references survival chance\n\n\nfunction survivalTest(animal, catastropheEvent) {\n  let chance = 0;\n\n  for (const trait in animal) {\n    if (survivalChance.catastropheEvent.hasOwnProperty(trait)) {\n      chance += survivalChance.catastropheEvent[trait][animal[trait]];\n    }\n  } // random integer between 1 to 100\n\n\n  const rndInteger = Math.floor(Math.random() * 100) + 1;\n\n  if (chance >= rndInteger) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst Game = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current Population: \", population.map((creature, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"creature\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 73\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: firstRound,\n      children: \"First Round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","traits","survivalChance","COLD","HOT","PREDATORS","TALL_PLANTS","VIRUS","VOLCANO","CATASTROPHES","Traits","constructor","legs","size","neck","hair","camo","createRandomOffspring","randomElement","LEGS","SIZE","NECK","HAIR","CAMO","array","Math","floor","random","length","population","firstRound","i","reproductionRound","survivalRound","console","log","reproductionRate","push","singleOffspring","animal_1","animal_2","indexOf","catastrophe","survivalTest","splice","animal","catastropheEvent","chance","trait","hasOwnProperty","rndInteger","Game","map","creature","index"],"sources":["/Users/jeffereylam/repos/darwin-game/src/components/Game.js"],"sourcesContent":["import React from \"react\";\nimport traits from \"../data/traits.json\";\nimport survivalChance from \"../data/survivalChance.json\";\n\nconst COLD = \"cold\"\nconst HOT = \"hot\"\nconst PREDATORS = \"predators\"\nconst TALL_PLANTS = \"tall plants\"\nconst VIRUS = \"virus\"\nconst VOLCANO = \"volcano\"\nconst CATASTROPHES = [COLD, HOT, PREDATORS, TALL_PLANTS, VIRUS, VOLCANO]\n\n// function Game() {\n//     const [page, setPage] = useState(0);\n//     const [gameData, setGameData] = useState({\n//         yearsLeft: 1000000,\n//         populationCount: 6,\n//     });\n\n//     const Page = [\n//         Logo,\n//         InitialMutation,\n//         SurvivalSimulation,\n//     ][currentPosition];\n\n//     return <div><Page goToNext={() => setPage(page + 1)} /></div>;\n// }\nclass Traits {\n    constructor(legs, size, neck, hair, camo) {\n        this.legs = legs;\n        this.size = size;\n        this.neck = neck;\n        this.hair = hair;\n        this.camo = camo;\n    }\n};\n\nfunction createRandomOffspring() {\n    return new Traits(\n        randomElement(traits.LEGS),\n        randomElement(traits.SIZE),\n        randomElement(traits.NECK),\n        randomElement(traits.HAIR),\n        randomElement(traits.CAMO)\n    );\n};\n\nfunction randomElement(array) {\n    return array[Math.floor(Math.random() * array.length)];\n};\n\nlet population = [createRandomOffspring(), createRandomOffspring(), createRandomOffspring()];\n\nfunction firstRound() {\n    for (let i = 0; i < 5; i++) {\n        reproductionRound();\n    }\n    survivalRound();\n    console.log(population.length);\n\n    return population;\n}\n\nfunction reproductionRound() {\n    const reproductionRate = population.length / 2;\n    for (let i = 1; i <= reproductionRate; i++) {\n        population.push(singleOffspring(randomElement(population), randomElement(population)));\n    }\n    return population;\n}\n\n// defaults to lower index instead of 50/50\nfunction singleOffspring(animal_1, animal_2) {\n    return new Traits(\n        traits.LEGS[Math.floor((traits.LEGS.indexOf(animal_1.legs) + traits.LEGS.indexOf(animal_2.legs)) / 2)],\n        traits.SIZE[Math.floor((traits.SIZE.indexOf(animal_1.size) + traits.SIZE.indexOf(animal_2.size)) / 2)],\n        traits.NECK[Math.floor((traits.NECK.indexOf(animal_1.neck) + traits.NECK.indexOf(animal_2.neck)) / 2)],\n        traits.HAIR[Math.floor((traits.HAIR.indexOf(animal_1.hair) + traits.HAIR.indexOf(animal_2.hair)) / 2)],\n        traits.CAMO[Math.floor((traits.CAMO.indexOf(animal_1.camo) + traits.CAMO.indexOf(animal_2.camo)) / 2)]\n    );\n}\n// should return population with changes\n// references surivival test\nfunction survivalRound() {\n    const catastrophe = randomElement(CATASTROPHES);\n    for (let i = 0; i < population.length; i++) {\n        if (survivalTest(population[i], survivalChance[catastrophe]) === false) {\n            population.splice(i, 1);\n        }\n    }\n\n    return population\n}\n\n// bool on whether or not animal lives\n// references survival chance\nfunction survivalTest(animal, catastropheEvent) {\n    let chance = 0;\n\n    for (const trait in animal) {\n        if (survivalChance.catastropheEvent.hasOwnProperty(trait)) {\n            chance += survivalChance.catastropheEvent[trait][animal[trait]];\n        }\n    }\n\n    // random integer between 1 to 100\n    const rndInteger = Math.floor(Math.random() * 100) + 1;\n    if (chance >= rndInteger) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nconst Game = () => {\n    return (\n        <section>\n           <h1>Current Population: {population.map((creature, index) => <p key={index}>creature</p>)}</h1>\n           <button onClick={firstRound}>First Round</button>\n        </section>\n    )\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}