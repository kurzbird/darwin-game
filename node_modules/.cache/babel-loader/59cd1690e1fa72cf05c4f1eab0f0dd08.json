{"ast":null,"code":"var _jsxFileName = \"/Users/jeffereylam/repos/darwin-game/src/components/MutationDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MutationDisplay(_ref) {\n  _s();\n\n  let {\n    genePool\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openDisplay = () => {\n    if (isOpen === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openDisplay,\n      children: \"Mutation Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-mutations\",\n      children: genePool.map((Mutation, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mutation \", i + 1, \": \", Mutation.legs, \", \", Mutation.size, \", \", Mutation.neck, \", \", Mutation.hair, \", \", Mutation.camo]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MutationDisplay, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = MutationDisplay;\nexport default MutationDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MutationDisplay\");","map":{"version":3,"names":["useState","MutationDisplay","genePool","isOpen","setIsOpen","openDisplay","map","Mutation","i","legs","size","neck","hair","camo"],"sources":["/Users/jeffereylam/repos/darwin-game/src/components/MutationDisplay.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction MutationDisplay({genePool}) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const openDisplay = () => {\n        if (isOpen === false) {\n            setIsOpen(true)\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    return (\n        <div>\n            <button onClick={openDisplay}>Mutation Display</button>\n            <div className=\"random-mutations\">\n                {genePool.map((Mutation, i) => <p key={i}>Mutation {i+1}: {Mutation.legs}, {Mutation.size}, {Mutation.neck}, {Mutation.hair}, {Mutation.camo}</p>)}\n            </div>\n        </div>\n    )\n}\n\nexport default MutationDisplay;\n"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,eAAT,OAAqC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACjC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMK,WAAW,GAAG,MAAM;IACtB,IAAIF,MAAM,KAAK,KAAf,EAAsB;MAClBC,SAAS,CAAC,IAAD,CAAT;IACH,CAFD,MAEO;MACHA,SAAS,CAAC,KAAD,CAAT;IACH;EACJ,CAND;;EAQA,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAEC,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,kBAAf;MAAA,UACKH,QAAQ,CAACI,GAAT,CAAa,CAACC,QAAD,EAAWC,CAAX,kBAAiB;QAAA,wBAAqBA,CAAC,GAAC,CAAvB,QAA4BD,QAAQ,CAACE,IAArC,QAA6CF,QAAQ,CAACG,IAAtD,QAA8DH,QAAQ,CAACI,IAAvE,QAA+EJ,QAAQ,CAACK,IAAxF,QAAgGL,QAAQ,CAACM,IAAzG;MAAA,GAAQL,CAAR;QAAA;QAAA;QAAA;MAAA,QAA9B;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAnBQP,e;;KAAAA,e;AAqBT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}