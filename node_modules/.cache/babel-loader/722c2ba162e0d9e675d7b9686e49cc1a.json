{"ast":null,"code":"var _jsxFileName = \"/Users/jeffereylam/repos/darwin-game/src/components/Game.js\";\nimport React from \"react\";\nimport \"./Catastrophe\";\nimport \"./CreateOffspring\"; // function Game() {\n//     const [page, setPage] = useState(0);\n//     const [gameData, setGameData] = useState({\n//         yearsLeft: 1000000,\n//         populationCount: 6,\n//     });\n//     const Page = [\n//         Logo,\n//         InitialMutation,\n//     ][currentPosition];\n//     return <div><Page goToNext={() => setPage(page + 1)} /></div>;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  let population = [createRandomOffspring(), createRandomOffspring(), createRandomOffspring()];\n\n  function firstRound() {\n    for (i = 0; i < 5; i++) {\n      reproductionRound();\n    }\n\n    ;\n    survivalRound();\n    console.log(population.length);\n    return population;\n  }\n\n  ;\n\n  function reproductionRound() {\n    const reproductionRate = population.length / 2;\n\n    for (let i = 1; i <= reproductionRate; i++) {\n      population.push(singleOffspring(randomElement(population), randomElement(population)));\n    }\n\n    ;\n    return population;\n  }\n\n  ; // defaults to lower index instead of 50/50\n\n  function singleOffspring(animal_1, animal_2) {\n    return new Traits(LEGS[Math.floor((LEGS.indexOf(animal_1.legs) + LEGS.indexOf(animal_2.legs)) / 2)], SIZE[Math.floor((SIZE.indexOf(animal_1.size) + SIZE.indexOf(animal_2.size)) / 2)], NECK[Math.floor((NECK.indexOf(animal_1.neck) + NECK.indexOf(animal_2.neck)) / 2)], HAIR[Math.floor((HAIR.indexOf(animal_1.hair) + HAIR.indexOf(animal_2.hair)) / 2)], CAMO[Math.floor((CAMO.indexOf(animal_1.camo) + CAMO.indexOf(animal_2.camo)) / 2)]);\n  } // should return population with changes\n  // references surivival test\n\n\n  function survivalRound() {\n    const catastrophe = randomElement(CATASTROPHES);\n\n    for (let i = 0; i < population.length; i++) {\n      if (survivalTest(population[i], SURVIVAL_CHANCE[catastrophe]) == false) {\n        population.splice(i, 1);\n      }\n    }\n\n    return population;\n  } // bool on whether or not animal lives\n  // references survival chance\n\n\n  function survivalTest(animal, catastropheEvent) {\n    let survivalChance = 0;\n\n    for (const trait in animal) {\n      if (catastropheEvent.hasOwnProperty(trait)) {\n        survivalChance += catastropheEvent[trait][animal[trait]];\n      }\n    } // random integer between 1 to 100\n\n\n    const rndInteger = Math.floor(Math.random() * 100) + 1;\n\n    if (survivalChance >= rndInteger) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Current Population: \", population]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Game","population","createRandomOffspring","firstRound","i","reproductionRound","survivalRound","console","log","length","reproductionRate","push","singleOffspring","randomElement","animal_1","animal_2","Traits","LEGS","Math","floor","indexOf","legs","SIZE","size","NECK","neck","HAIR","hair","CAMO","camo","catastrophe","CATASTROPHES","survivalTest","SURVIVAL_CHANCE","splice","animal","catastropheEvent","survivalChance","trait","hasOwnProperty","rndInteger","random"],"sources":["/Users/jeffereylam/repos/darwin-game/src/components/Game.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./Catastrophe\";\nimport \"./CreateOffspring\";\n\n// function Game() {\n//     const [page, setPage] = useState(0);\n//     const [gameData, setGameData] = useState({\n//         yearsLeft: 1000000,\n//         populationCount: 6,\n//     });\n\n//     const Page = [\n//         Logo,\n//         InitialMutation,\n//     ][currentPosition];\n\n//     return <div><Page goToNext={() => setPage(page + 1)} /></div>;\n// }\n\nconst Game = () => {\n    let population = [createRandomOffspring(), createRandomOffspring(), createRandomOffspring()];\n\n    function firstRound() {\n        for (i = 0; i < 5; i++) {\n            reproductionRound();\n        };\n        survivalRound();\n        console.log(population.length);\n\n        return population;\n    };\n\n    function reproductionRound() {\n        const reproductionRate = population.length / 2;\n        for (let i = 1; i <= reproductionRate; i++) {\n            population.push(singleOffspring(randomElement(population), randomElement(population)));\n        };\n        return population;\n    };\n\n    // defaults to lower index instead of 50/50\n    function singleOffspring(animal_1, animal_2) {\n        return new Traits(\n            LEGS[Math.floor((LEGS.indexOf(animal_1.legs) + LEGS.indexOf(animal_2.legs)) / 2)],\n            SIZE[Math.floor((SIZE.indexOf(animal_1.size) + SIZE.indexOf(animal_2.size)) / 2)],\n            NECK[Math.floor((NECK.indexOf(animal_1.neck) + NECK.indexOf(animal_2.neck)) / 2)],\n            HAIR[Math.floor((HAIR.indexOf(animal_1.hair) + HAIR.indexOf(animal_2.hair)) / 2)],\n            CAMO[Math.floor((CAMO.indexOf(animal_1.camo) + CAMO.indexOf(animal_2.camo)) / 2)]\n        )\n    }\n    // should return population with changes\n    // references surivival test\n    function survivalRound() {\n        const catastrophe = randomElement(CATASTROPHES);\n        for (let i = 0; i < population.length; i++) {\n            if (survivalTest(population[i], SURVIVAL_CHANCE[catastrophe]) == false) {\n                population.splice(i, 1);\n            }\n        }\n\n        return population;\n    }\n\n    // bool on whether or not animal lives\n    // references survival chance\n    function survivalTest(animal, catastropheEvent) {\n        let survivalChance = 0;\n\n        for (const trait in animal) {\n            if (catastropheEvent.hasOwnProperty(trait)) {\n                survivalChance += catastropheEvent[trait][animal[trait]];\n            }\n        }\n\n        // random integer between 1 to 100\n        const rndInteger = Math.floor(Math.random() * 100) + 1;\n        if (survivalChance >= rndInteger) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n\n    return (\n        <h1>Current Population: {population}</h1>\n    )\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}